/*
 * Copyright (C) 2012 Southern Storm Software, Pty Ltd.
 *
 * This work is licensed under the Creative Commons Attribution-ShareAlike
 * 2.5 Generic License. To view a copy of this license, visit
 * http://creativecommons.org/licenses/by-sa/2.5/ or send a letter
 * to Creative Commons, 444 Castro Street, Suite 900, Mountain View,
 * California, 94041, USA.
 */

/**
\file installation.dox
\page installation Installation instructions for Ardpicprog

The source code for Ardpicprog is available from github:
<a href="https://github.com/rweather/ardpicprog">https://github.com/rweather/ardpicprog</a>.  There are two main parts to the source: the
\ref host_program "ardpicprog host program" and the
\ref programpic_sketch "ProgramPIC sketch".

The host program can be built on GNU/Linux and other POSIX-compatible
systems by typing \c make.  The program can be built using Cygwin under
Windows in either Cygwin/POSIX mode (\c make) or native Windows mode
(<tt>make win</tt>).  Once the program has been built, copy the
\c ardpicprog binary from the \c host directory to somewhere on your PATH.

The ProgramPIC sketch should be uploaded to an Arduino Uno compatible
board that has an appropriate \ref pic14_zif_circuit "PIC programming shield"
attached to it.

To test that the host can talk to the PIC programmer, plug the Arduino
into the host computer, shut down the Serial Monitor window in the
Arduino IDE, and type the following on the host (the port may be
different on your machine; e.g. \c COM1 for native Windows mode):

\code
ardpicprog -p /dev/ttyACM0 --list-devices
\endcode

You should see a list of supported devices like the following:

\code
Supported devices:
pic12f629*, pic12f630*, pic12f675*, pic12f676*, pic16f84, pic16f84a*,
pic16f87*, pic16f88*, pic16f627*, pic16f627a*, pic16f628*, pic16f628a*,
pic16f648a*
* = autodetected
\endcode

Next, put a \ref supported_devices "compatible" PIC device into the
programming socket, ensure that the 13 volt programming voltage is
applied, and then type the following:

\code
ardpicprog -p /dev/ttyACM0 -o output.hex --skip-ones
\endcode

That should dump the entire contents of the PIC device to the file
<tt>output.hex</tt>.

See the documentation for the \ref host_program "host program" for
more information on using Ardpicprog to read and burn PIC's.

*/
