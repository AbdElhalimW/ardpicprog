/*
 * Copyright (C) 2012 Southern Storm Software, Pty Ltd.
 *
 * This work is licensed under the Creative Commons Attribution-ShareAlike
 * 2.5 Generic License. To view a copy of this license, visit
 * http://creativecommons.org/licenses/by-sa/2.5/ or send a letter
 * to Creative Commons, 444 Castro Street, Suite 900, Mountain View,
 * California, 94041, USA.
 */

/**
\file host.dox
\page host_program Host program for controlling the PIC programmer

Ardpicprog is a program that runs on the host machine and controls the
process or reading to and writing from a PIC device.  It connects via a
serial port to the sketch running on the Arduino that implements the
PIC programming logic.

The command-line syntax of Ardpicprog is designed to be backwards-compatible
with <a href="http://hyvatti.iki.fi/~jaakko/pic/picprog.html">picprog</a>
to make it easy to replace invocations of picprog in existing Makefile's
and build scripts.

The host program does not implement any specific logic for
programming PIC devices.  It merely communicates with a sketch running on
the Arduino via a serial port and asks it to perform
\ref sect_cmd_read "READ", \ref sect_cmd_write "WRITE",
\ref sect_cmd_erase "ERASE", and other commands.  The sketch itself takes
care of the low-level details of talking to the PIC device.  To support a
new PIC device type, the sketch will need to be replaced with an alternative
that is familiar with the low-level programming details of the new device.
The \ref pic14_zif_circuit "circuit" for the PIC programmer shield may
also need to be modified.

Note: the Serial Monitor in the Arduino IDE should be closed while Ardpicprog
is in use.  Otherwise the monitor may steal some of the serial data that
was intended for Ardpicprog and the reading or burning process will fail.

\section host_usage Usage

\code
ardpicprog --quiet -q --warranty --copying --help -h
    --device DEVTYPE -d DEVTYPE --pic-serial-port PORT -p PORT
    --input-hexfile INPUT -i INPUT --output-hexfile OUTPUT -o OUTPUT
    --ihx8m --ihx16 --ihx32 --cc-hexfile CCFILE -c CCFILE --skip-ones
    --erase --burn --force-calibration --list-devices --speed SPEED
\endcode

\section host_common Common options

\par --quiet
Suppress the copyright header.

\par --device DEVTYPE, -d DEVTYPE
Specifies the type of PIC device that is in the programmer;
e.g. \c pic16f84, \c pic16f628a, etc.  If this option is not present or it
is set to <b>auto</b>, then Ardpicprog will attempt to autodetect the
device in the programmer.  Older PIC devices that do not have an identifier
word will need the <b>--device</b> option to be specified manually.
The <b>--list-devices</b> option can be used to list all supported PIC
device types.  See also, \ref supported_devices "Supported PIC devices".

\par --pic-serial-port PORT, -p PORT
Specifies the serial port tty device to use to communicate with the
programmer.  The default is <tt>/dev/ttyACM0</tt> under POSIX systems
and <tt>COM1</tt> under Windows.

\par --speed SPEED
Specifies the speed of the serial connection to the programmer.
The default is 9600.  Other allowable values are 19200, 38400,
57600, 115200, and 230400.  Note: the <tt>setup()</tt> function of
the sketch running in the Arduino will need to be modified to use
the same speed.  This option is specific to Ardpicprog; it does not
exist in picprog.

\section host_reading Reading from a PIC device

\code
ardpicprog --output-hexfile OUTPUT --skip-ones
\endcode

\par --output-hexfile OUTPUT, -o OUTPUT
Reads the entire contents of the PIC device and writes them in
<a href="http://en.wikipedia.org/wiki/Intel_HEX">Intel HEX</a>
format to OUTPUT.

\par --skip-ones
Ignores any word from the PIC device that is all-ones; i.e. not set to a
specific value.

\par --ihx8m, --ihx16, --ihx32
Selects the type of HEX file to write to OUTPUT.  The default is
<b>--ihx16</b> for low and mid-range PIC devices and <b>--ihx32</b> for
high-range PIC devices.

\section host_burning Burning a PIC device

\code
ardpicprog --erase --burn --input-hexfile INPUT
\endcode

\par --erase
Erases the PIC before burning program, data, and configuration words onto it.

\par --burn
Burn program, data, and configuration words onto the PIC device.
The words will be read back after burning to verify that they have
been written correctly.

\par --input-hexfile INPUT, -i INPUT
Specifies the HEX file whose contents should be written to the PIC device.
The input must be in <a href="http://en.wikipedia.org/wiki/Intel_HEX">Intel
HEX</a> format, be it IHX8M, IHX16, or IHX32.  The contents of the HEX file
must be suitable for the type of device in the programmer.

\par --cc-hexfile CCFILE, -c CCFILE
After reading the contents of the input INPUT, write the contents back out
to CCFILE.  This is intended for debugging purposes to verify that the
INPUT was read correctly.

\par --force-calibration
Forces the calibration words (e.g. OSCCAL) in the PIC device, if any, to
be erased and overwritten with the values from the INPUT.  If this
option is not specified then the programmer will preserve the original
calibration words.  If <b>--force-calibration</b> is not specified,
then calibration words that appear in INPUT will be ignored.

\par --output-hexfile OUTPUT, -o OUTPUT
After burning, read back the contents of the PIC device and write them
to OUTPUT.

\section host_other Other options

\par --list-devices
Lists all of the PIC devices that are supported by the programmer sketch
running on the Arduino.  If your device type does not appear in this list,
then you will need a new version of the sketch.  This option is specific
to Ardpicprog; it does not exist in picprog.

\par --help
Prints usage information for Ardpicprog.

\par --copying
Prints the GNU General Public License, Version 3.

\par --warranty
Prints the warranty disclaimer.

\section host_ignored Ignored options

The following options are provided for backwards-compatibility with
picprog, but are ignored by Ardpicprog:

\par --jdm
\par --k8048
\par --nordtsc
\par --rdtsc
\par --reboot
\par --slow

\section host_environment Environment

\par PIC_DEVICE
PIC device to read or burn.  Defaults to autodetection of the PIC device type.
The <b>--device</b> option overrides this environment variable.

\par PIC_PORT
Specifies the serial port tty device to use to communicate with the
programmer.  The default is <tt>/dev/ttyACM0</tt> under POSIX systems and
<tt>COM1</tt> under Windows.  The <b>--pic-serial-port</b>
option overrides this environment variable.

\section host_exit Exit values

\par 0
The reading or burning process completed with no error.

\par 64
There was a problem with the command-line syntax.

\par 65
INPUT is not in <a href="http://en.wikipedia.org/wiki/Intel_HEX">Intel
HEX</a> format.

\par 66
Could not open INPUT or CCFILE.

\par 74
An error occurred while talking to the programmer, the burning process
failed for some reason (e.g. read-back of contents did not match),
or there was a problem when writing to OUTPUT.

\par 76
The PIC device is unknown to the programmer.

*/
